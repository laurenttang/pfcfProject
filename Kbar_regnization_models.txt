diff --git a/Kbar_regnization/models.py b/Kbar_regnization/models.py
index 559eefc..ee0a321 100644
--- a/Kbar_regnization/models.py
+++ b/Kbar_regnization/models.py
@@ -8,7 +8,7 @@
 from django.db import models
 
 
-class Cme1Percent(models.Model):
+class Cme_1percent(models.Model):                         # corresponds to the views.py
     id = models.BigIntegerField(blank=True, null=False, primary_key=True)
     mod_name = models.TextField(blank=True, null=True)
     p_count = models.FloatField(blank=True, null=True)
@@ -26,6 +26,14 @@ class Cme1Percent(models.Model):
         managed = False
         db_table = 'cme_1percent'
 
+class cme_1percent_txf(models.Model):
+    id = models.BigIntegerField(blank=True, null=False, primary_key=True)
+    Date = models.TextField(db_column='Date', blank=True, null=True)  # Field name made lowercase.
+    diff_p = models.FloatField(db_column='diff_p', blank=True, null=True)  # Field name made lowercase.
+
+    class Meta:
+        managed = False
+        db_table = 'cme_1percent_txf'
 
 class StockfRealtime(models.Model):
     future_code = models.TextField(blank=True, null=True)
@@ -203,3 +211,34 @@ class Strongshort3(models.Model):
     class Meta:
         managed = False
         db_table = 'strongshort3'
+'''
+class cme_1percent(models.Model):                                       # corresponds to urls.py
+    #date = models.FloatField(db_column='Date', blank=True, null=True)  # Field name made lowercase.
+    mod_name = models.TextField(blank=True, null=True)
+ 
+    p_count = models.FloatField(db_column='p_count', blank=True, null=True)  # Field name made lowercase.
+    p_avg = models.FloatField(db_column='p_avg', blank=True, null=True)  # Field name made lowercase.
+    p_max = models.FloatField(db_column='p_max', blank=True, null=True)  # Field name made lowercase.
+    n_count = models.FloatField(db_column='n_count', blank=True, null=True)  # Field name made lowercase.
+    n_avg = models.FloatField(db_column='n_avg', blank=True, null=True)  # Field name made lowercase.
+    n_min = models.FloatField(db_column='n_min', blank=True, null=True)
+    p_win = models.FloatField(db_column='p_win', blank=True, null=True)
+    #n_win = models.FloatField(db_column='n_win', blank=True, null=True)
+    p_maxpt = models.FloatField(db_column='p_maxpt', blank=True, null=True)
+    n_maxpt = models.FloatField(db_column='n_maxpt', blank=True, null=True)
+
+    id = models.BigIntegerField(blank=True, null=False, primary_key=True)
+
+    class Meta:
+        managed = False
+        db_table = 'cme_1percent'  # define the table_name of db source
+'''
+
+
+
+
+
+
+
+
+
